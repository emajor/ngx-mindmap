{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mindmap/lib/mindmap.service.ts","ng://mindmap/lib/services/color.service.ts","ng://mindmap/lib/services/toolbar.service.ts","ng://mindmap/lib/services/node.service.ts","ng://mindmap/lib/services/collapse.service.ts","ng://mindmap/lib/services/mutual.service.ts","ng://mindmap/lib/mindmap.component.ts","ng://mindmap/lib/mindmap.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","MindmapService","Injectable","args","providedIn","ColorService","prototype","getRandomColor","color","Math","floor","random","checkedColor","arrayColorUsed","this","includes","ToolbarService","removeToolbarNode","node","nodeId","data","toolbar","document","querySelector","remove","hideToolbarNode","style","visibility","showToolbarNode","collapseNode","_this","connectedEdges","map","edge","target","subnode","expandNode","NodeService","colorService","getNodeById","id","that","cy","nodes","renameNode","currentLabel","newLabel","prompt","emitChange","getUniqueNodeId","usedId","el","round","toString","indexOf","getLastNodeId","getParentNode","parentNodeId","updateInformationNode","formNode","name","updateColorBranchNode","merge_array","array1","array2","result_array","arr","concat","len","assoc","item","unshift","getBranchConnected","result","used","arrayResult","arrayIdTested","idNode","push","allNodesConnected","getNodeConnected","test","objectToArray","Object","values","n","targetIdNode","sourceIdNode","openModalUpdateNode","statusModal","get","setValue","openModal","openModalAddNode","console","log","nodeConnected","CollapseService","isCollapsable","MutualService","nodeService","toolbarService","collaspeService","createToolbarNode","it","nodeSelected","divGlobal","createElement","border","body","appendChild","divToolbar","className","divOption","divAction","elmtAdd","innerHTML","setAttribute","onclick","event","dataset","elmtRemove","removeNode","elmtCollapse","refreshToolbarNode","elmtExpand","addToolbarNode","nodePopper","popper","content","updatePopper","scheduleUpdate","on","addChildNode","nextId","newNode","add","group","label","collapsed","newLinkId","source","renderGraph","listChildNodes","edges","keysChildNodes","keys","parentNode","keysChildNodes_1","tslib_1.__values","keysChildNodes_1_1","key","childNode","$","setTheme","cytoscape","use","contextMenus","MindmapComponent","formBuilder","cpService","mutualService","renderer","modalService","onChange","EventEmitter","timestampLastClick","loading","submitted","elements","config","container","layout","maxZoom","minZoom","selector","shape","background-color","line-color","eventChangeColor","ngOnInit","nativeElement","firstElementChild","timestampClick","timeStamp","trigger","originalTapEvent","optionsMenu","menuItems","onClickFunction","optionMenu","isActive","warn","hideMenuItem","showMenuItem","FormGroup","FormControl","Validators","required","maxLength","control","validateColor","valid","defineProperty","controls","modalRef","show","modalNode","closeModal","hide","onSubmit","invalid","reset","run","emit","json","Component","template","FormBuilder","ColorPickerService","ElementRef","Renderer2","BsModalService","Output","ViewChild","static","MindmapModule","NgModule","declarations","imports","CommonModule","ReactiveFormsModule","FormsModule","ColorPickerModule","ModalModule","forRoot","providers","bootstrap","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MindmapService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorService {\n\n  constructor() { }\n  getRandomColor() {\n    let letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  checkedColor(arrayColorUsed) {\n    let color = this.getRandomColor();\n\n    if (arrayColorUsed.includes(color)) {\n      this.checkedColor(arrayColorUsed);\n    }\n\n    return color;\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolbarService {\n\n  constructor() {\n  }\n\n\n  removeToolbarNode(node) {\n    const nodeId = node.data('id');\n\n\n    const toolbar = document.querySelector('#toolbar-' + nodeId);\n    if (toolbar) {\n      toolbar.remove();\n    }\n  }\n\n\n\n  hideToolbarNode(node) {\n    const nodeId = node.data('id');\n    const toolbar: any = document.querySelector('#toolbar-' + nodeId);\n    if (toolbar) {\n      toolbar.style.visibility = 'hidden';\n    }\n  }\n\n  showToolbarNode(node) {\n    const nodeId = node.data('id');\n    const toolbar: any = document.querySelector('#toolbar-' + nodeId);\n    if (toolbar) {\n      toolbar.style.visibility = 'visible';\n    }\n  }\n  // PARTIE COLLAPSE\n\n  collapseNode(node) {\n\n    node.data('collapsed', true);\n    const connectedEdges = node.connectedEdges(`[source=\"${node.data('id')}\"]`);\n\n    if (connectedEdges.length) {\n      connectedEdges.map((edge) => {\n\n        if (edge.style('visibility') === 'visible') {\n          edge.style('visibility', 'hidden');\n          edge.target().map((subnode) => {\n            subnode.style('visibility', 'hidden');\n            subnode.data('show', false);\n            this.hideToolbarNode(subnode);\n            this.collapseNode(subnode);\n          });\n        }\n      });\n    }\n  }\n\n  expandNode(node) {\n    const connectedEdges = node.connectedEdges(`[source=\"${node.data('id')}\"]`);\n\n    node.data('collapsed', false);\n\n    if (connectedEdges.length) {\n      connectedEdges.map((edge) => {\n\n        if (edge.style('visibility') === 'hidden') {\n          edge.style('visibility', 'visible');\n          edge.target().map((subnode) => {\n            subnode.style('visibility', 'visible');\n            subnode.data('show', true);\n            this.showToolbarNode(subnode);\n            this.expandNode(subnode);\n          });\n        }\n\n      });\n    }\n    this.hideToolbarNode(node);\n\n  }\n\n  // FIN PARTIE COLLAPSE\n}\n","import { Injectable } from '@angular/core';\nimport { ColorService } from './color.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeService {\n\n  constructor(private colorService: ColorService) {\n    colorService = this.colorService;\n  }\n\n\n\n  getNodeById(id, that) {\n    return that.cy.nodes('[id=\"' + id + '\"]');\n  }\n\n  renameNode(node, that) {\n    const currentLabel = node.data('label');\n    const newLabel = prompt('Quel nom pour ce noeud ?', currentLabel);\n    if (newLabel !== currentLabel) {\n      node.data('label', newLabel);\n    }\n    that.emitChange();\n  }\n\n  getUniqueNodeId(that) {\n    const usedId = that.cy.nodes().map((el) => {\n      return el.data('id');\n    });\n\n    const id = Math.round(100000 * Math.random()).toString(10);\n    const idAlreadyExist = usedId.indexOf(id) !== -1;\n\n    if (idAlreadyExist) {\n      return this.getUniqueNodeId(that);\n    }\n\n    return id;\n  }\n\n  getLastNodeId(that) {\n    const nodes = that.cy.nodes();\n    // console.log(nodes[nodes.length - 1].data('id'));\n  }\n\n  getParentNode(node, that) {\n    const nodeId = node.data('id');\n    const parentNodeId = node.connectedEdges('[target=\"' + nodeId + '\"]').data('source');\n    return that.cy.nodes('[id=\"' + parentNodeId + '\"]');\n  }\n\n\n\n  // getTestNode(that) {\n  //   return that.cy.nodes('[id=\"n\"]');\n  // }\n\n  updateInformationNode(node, that) {\n    node.data('label', that.formNode.value.name);\n    node.style('background-color', that.formNode.value.color);\n    this.updateColorBranchNode(node, that.formNode.value.color, that);\n\n  }\n\n\n\n  merge_array(array1, array2) {\n    const result_array = [];\n    const arr = array1.concat(array2);\n    let len = arr.length;\n    const assoc = {};\n\n    while (len--) {\n      const item = arr[len];\n\n      if (!assoc[item]) {\n        result_array.unshift(item);\n        assoc[item] = true;\n      }\n    }\n\n    return result_array;\n  }\n\n  getBranchConnected(node, result, used, that) {\n    // init variable\n    let arrayResult = [];\n    let arrayIdTested = [];\n    const idNode = node.data('id');\n\n    // on merge avce les paramÃ¨tres\n\n    arrayResult = this.merge_array(arrayResult, result);\n    arrayIdTested = this.merge_array(used, arrayIdTested);\n\n\n\n    if (idNode !== 'n') {\n      arrayIdTested.push(idNode);\n      const allNodesConnected = this.getNodeConnected(this.getNodeById(idNode, that));\n      arrayResult = this.merge_array(arrayResult, allNodesConnected);\n      if (allNodesConnected.length > 0) {\n        for (let id in allNodesConnected) {\n          id = allNodesConnected[id];\n          if (id !== 'n' && !arrayIdTested.includes(id)) {\n            arrayResult.push(id);\n            arrayIdTested.push(id);\n            const test = this.getBranchConnected(this.getNodeById(id, that), arrayResult, arrayIdTested, that);\n            arrayResult = this.merge_array(arrayResult, test);\n          }\n\n        }\n      }\n    }\n    // retorune un tableau d'id de node\n    return arrayResult;\n  }\n\n\n  getNodeConnected(node) {\n    const idNode = node.data('id');\n    const result = [];\n    let objectToArray;\n    const allNodesConnected = node.connectedEdges();\n    delete allNodesConnected['_private'];\n    delete allNodesConnected['length'];\n\n    objectToArray = Object.values(allNodesConnected);\n\n    if (objectToArray.length > 0 && !result.includes(idNode)) {\n      for (const n in objectToArray) {\n        const targetIdNode = objectToArray[n].data('target');\n        const sourceIdNode = objectToArray[n].data('source');\n        if (targetIdNode !== 'n' && !result.includes(targetIdNode) && targetIdNode !== idNode) {\n          result.push(targetIdNode);\n        }\n        if (sourceIdNode !== 'n' && !result.includes(sourceIdNode) && sourceIdNode !== idNode) {\n          result.push(sourceIdNode);\n        }\n      }\n\n\n    }\n\n\n    return result;\n  }\n  openModalUpdateNode(node, that) {\n    const nodeId = node.data('id');\n    if (nodeId !== 'n') {\n      that.statusModal = true;\n      that.formNode.get('id').setValue(nodeId);\n      that.openModal();\n      that.formNode.get('name').setValue(node.data('label'));\n      that.color = node.style('background-color');\n      that.formNode.get('color').setValue(node.style('background-color'));\n    }\n  }\n  openModalAddNode(node, that) {\n    console.log('on atteind la fonction');\n    that.statusModal = false;\n\n    that.formNode.get('id').setValue(node.data('id'));\n\n    let color = this.colorService.checkedColor(that.arrayColorUsed);\n\n    if (node.data('id') !== 'n') {\n      color = node.style('background-color');\n    }\n    that.color = color;\n    that.formNode.get('color').setValue(color);\n\n    that.openModal();\n  }\n\n\n  // PARTIE COULEUR\n  updateColorBranchNode(node, color, that) {\n    const nodeConnected = this.getBranchConnected(node, [], [], that);\n    for (let id in nodeConnected) {\n      id = nodeConnected[id];\n      this.getNodeById(id, that).style('background-color', color);\n    }\n  }\n  // FIN PARTIE COULEUR\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollapseService {\n\n  constructor() { }\n  isCollapsable(node: any) {\n    const links = node.connectedEdges('[source=\"' + node.data('id') + '\"]');\n    return links.length !== 0;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NodeService } from './node.service';\nimport { ColorService } from './color.service';\nimport { CollapseService } from './collapse.service';\nimport { ToolbarService } from './toolbar.service';\nimport  $ from 'jquery';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MutualService {\n\n  constructor(private nodeService: NodeService, private toolbarService: ToolbarService, private colorService: ColorService, private collaspeService: CollapseService) {\n    toolbarService = this.toolbarService;\n    nodeService = this.nodeService;\n    colorService = this.colorService;\n    collaspeService = this.collaspeService;\n  }\n\n  // PARTIE TOOLBAR\n  createToolbarNode(idNode, that) {\n\n    const it = this;\n    const nodeSelected = this.nodeService.getNodeById(idNode, that);\n\n    const divGlobal = document.createElement('div');\n    divGlobal.style.border = '1px solid red';\n    divGlobal.id = 'toolbar-' + idNode;\n    document.body.appendChild(divGlobal);\n\n    const divToolbar = document.createElement('div');\n    divToolbar.className = 'mindmap-toolbar';\n    divGlobal.appendChild(divToolbar);\n\n    const divOption = document.createElement('div');\n    divOption.id = 'options';\n    divToolbar.appendChild(divOption);\n\n    const divAction = document.createElement('div');\n    divAction.className = 'actions';\n    divToolbar.appendChild(divAction);\n\n    const elmtAdd = document.createElement('button');\n    elmtAdd.innerHTML = '+';\n    elmtAdd.setAttribute('data-node-id', idNode);\n\n    elmtAdd.onclick = function (event: any) {\n      console.log('on passe ic frerre ');\n      const nodeId = event.target.dataset.nodeId;\n      const node = it.nodeService.getNodeById(nodeId, that);\n      it.nodeService.openModalAddNode(node, that);\n\n    };\n    divAction.appendChild(elmtAdd);\n\n    if (idNode !== 'n') {\n      const elmtRemove = document.createElement('button');\n      elmtRemove.innerHTML = 'x';\n      elmtRemove.onclick = function () {\n        it.removeNode(nodeSelected, that);\n      };\n      divAction.appendChild(elmtRemove);\n    }\n\n    if (this.collaspeService.isCollapsable(nodeSelected) && !nodeSelected.data('collapsed')) {\n      const elmtCollapse = document.createElement('button');\n      elmtCollapse.innerHTML = '_';\n      elmtCollapse.onclick = function () {\n        it.toolbarService.collapseNode(nodeSelected);\n        it.refreshToolbarNode(nodeSelected, that);\n      };\n      divAction.appendChild(elmtCollapse);\n    }\n    if (nodeSelected.data('collapsed')) {\n      const elmtExpand = document.createElement('button');\n      elmtExpand.innerHTML = 'E';\n      elmtExpand.onclick = function () {\n        it.toolbarService.expandNode(nodeSelected);\n        it.refreshToolbarNode(nodeSelected, that);\n\n      };\n      divAction.appendChild(elmtExpand);\n    }\n\n\n    return divGlobal;\n  }\n  addToolbarNode(idNode, that) {\n    const it = this;\n\n    const nodeSelected = that.cy.nodes('[id=\"' + idNode + '\"]');\n\n    const nodePopper = nodeSelected.popper({\n\n      content: function () {\n        return it.createToolbarNode(idNode, that);\n      }\n\n    });\n\n    const updatePopper = function () {\n      nodePopper.scheduleUpdate();\n    };\n\n    nodeSelected.on('position', updatePopper);\n    that.cy.on('pan zoom resize', updatePopper);\n\n  }\n  refreshToolbarNode(node, that) {\n    // console.log('REFRESH', node.data())\n    this.toolbarService.removeToolbarNode(node);\n    this.addToolbarNode(node.data('id'), that);\n  }\n  // FIN PARTIE TOOLBAR\n\n\n  // PARTIE NODE\n  addChildNode(node = null, name, color, that) {\n\n    // Si node repliÃ© on le dÃ©plie\n    if (node.data('collapsed') === true) {\n      this.toolbarService.expandNode(node);\n    }\n    const nodeId = node.data('id');\n    const nextId = this.nodeService.getUniqueNodeId(that);\n\n    const newNode = that.cy.add({\n      group: 'nodes',\n      data: {\n        id: nextId,\n        label: name,\n        collapsed: false\n      }\n    });\n\n    newNode.style('background-color', color);\n\n    const newLinkId = nodeId + '-' + nextId;\n    that.cy.add({ group: 'edges', data: { id: newLinkId, source: nodeId, target: nextId } });\n\n    node.data('collapsed', false);\n\n    this.addToolbarNode(nextId, that);\n    this.nodeService.updateColorBranchNode(newNode, color, that);\n\n    this.refreshToolbarNode(node, that);\n    this.toolbarService.hideToolbarNode(newNode);\n    that.renderGraph();\n    that.emitChange();\n\n  }\n  removeNode(node, that) {\n    const nodeId = node.data('id');\n\n    if (nodeId !== 'n') {\n      const listChildNodes = that.cy.edges(`[source=\"${nodeId}\"]`);\n      const keysChildNodes = Object.keys(listChildNodes);\n      const parentNode = this.nodeService.getParentNode(node, that);\n      console.log('PARENT', parentNode.data());\n\n\n      this.refreshToolbarNode(parentNode, that);\n\n      for (const key of keysChildNodes) {\n\n        let childNode = listChildNodes[key];\n\n        if (childNode['_private']) {\n          childNode = listChildNodes[key]['_private']['target'];\n          $('#button' + nodeId).remove();\n          this.removeNode(childNode, that);\n          that.cy.remove(childNode);\n        }\n        $('#toolbar-' + nodeId).remove();\n        that.cy.remove(node);\n      }\n    }\n\n    this.toolbarService.removeToolbarNode(node);\n    that.emitChange();\n  }\n  // FIN PARTIE NODE\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ElementRef, Renderer2, TemplateRef, ViewChild } from '@angular/core';\nimport cytoscape from 'cytoscape';\nimport contextMenus from 'cytoscape-context-menus';\nimport popper from 'cytoscape-popper';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ColorPickerService, Cmyk } from 'ngx-color-picker';\nimport { ColorService } from './services/color.service';\nimport { ToolbarService } from './services/toolbar.service';\nimport { NodeService } from './services/node.service';\nimport { MutualService } from './services/mutual.service';\nimport $ from 'jquery';\nimport { setTheme } from 'ngx-bootstrap/utils';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\nsetTheme('bs4');\ncytoscape.use(popper);\ncytoscape.use(contextMenus, $);\n\n\n@Component({\n  selector: 'lib-mindmap',\n  templateUrl: './mindmap.component.html',\n  styleUrls: ['./mindmap.component.scss']\n})\nexport class MindmapComponent implements OnInit {\n\n\n\n  @Output() onChange = new EventEmitter();\n\n  arrayColorUsed: Array<any> = ['#000000'];\n  timestampLastClick = 0;\n  formNode: FormGroup;\n  loading = false;\n  submitted = false;\n  color: String;\n  statusModal: boolean;\n  optionMenu: any;\n  modalRef: BsModalRef;\n\n  @ViewChild('modalNode', { static: true })\n  private modalNode: TemplateRef<any>;\n\n  elements: any = {\n    nodes: [\n      { data: { id: 'n', label: 'Root' } },\n    ]\n  };\n\n  cy = null;\n  config = {\n    container: null,\n    elements: this.elements,\n    layout: {\n      name: 'cose',\n    },\n    maxZoom: 2.5,\n    minZoom: 0.5,\n    style: [\n      {\n        selector: 'node',\n        style: {\n          'label': 'data(id)', // Remplacer par data(label) une fois terminÃ©\n          'shape': 'round-rectangle',\n          'background-color': '#000000'\n        }\n      },\n      {\n        selector: 'edge',\n        style: {\n          'line-color': '#EEE'\n        }\n      }\n    ]\n\n  };\n\n  constructor(private formBuilder: FormBuilder, private cpService: ColorPickerService,\n    private toolbarService: ToolbarService, private colorService: ColorService,\n    private nodeService: NodeService, private mutualService: MutualService,\n    private el: ElementRef, private renderer: Renderer2,\n    private modalService: BsModalService\n\n  ) {\n    cpService = this.cpService;\n    toolbarService = this.toolbarService;\n    colorService = this.colorService;\n    nodeService = this.nodeService;\n    mutualService = this.mutualService;\n  }\n\n\n  public eventChangeColor(event: string, data: any) {\n    this.formNode.get('color').setValue(data);\n  }\n\n  ngOnInit() {\n    const that = this;\n    this.config.container = this.el.nativeElement.firstElementChild;\n    this.cy = cytoscape(this.config);\n    // this.cy.contextMenus($);\n    this.cy.on('tap', 'node', function (event) {\n      const timestampClick = event.timeStamp;\n      const result = timestampClick - this.timestampLastClick;\n\n      if (result < 500) {\n        event.target.trigger('doubletap', event);\n      }\n\n      this.timestampLastClick = timestampClick;\n    });\n\n    this.cy.on('doubletap', function (event, originalTapEvent) {\n      console.log('evenement', event);\n      // const nodeId = event.target.data('id');\n      that.nodeService.openModalUpdateNode(event.target, that);\n\n    });\n\n    this.cy.on('mouseout', 'node', function (event) {\n      const node = event.target;\n      that.toolbarService.hideToolbarNode(node);\n    });\n    this.cy.on('mouseover', 'node', function (event) {\n      const node = event.target;\n      that.toolbarService.showToolbarNode(node);\n    });\n\n\n\n    const optionsMenu = {\n      menuItems: [\n        {\n          id: 'add-node',\n          content: 'Ajouter un noeud enfant',\n          selector: 'node',\n          onClickFunction: (event) => {\n            const node = event.target;\n            this.nodeService.openModalAddNode(node, that);\n          }\n        },\n        {\n          id: 'rename-node',\n          content: 'Modifier',\n          selector: 'node',\n          onClickFunction: (event) => {\n            const node = event.target;\n            this.nodeService.openModalUpdateNode(node, this);\n          }\n        },\n        {\n          id: 'collapse-node',\n          content: 'Replier',\n          selector: 'node',\n          onClickFunction: (event) => {\n            const node = event.target;\n            this.collapseNode(node);\n          }\n        },\n        {\n          id: 'expand-node',\n          content: 'DÃ©plier',\n          selector: 'node',\n          onClickFunction: (event) => {\n            const node = event.target;\n            this.expandNode(node);\n          }\n        },\n        {\n          id: 'remove-node',\n          content: 'Supprimer',\n          selector: 'node[id!=\"n\"]',\n          onClickFunction: (event) => {\n            const node = event.target;\n            this.mutualService.removeNode(node, this);\n          }\n        }\n      ]\n    };\n\n    this.optionMenu = this.cy.contextMenus(optionsMenu);\n    this.optionMenu.isActive();\n    this.mutualService.addToolbarNode('n', this);\n\n    this.cy.on('cxttapstart', 'node', function (event) {\n      const node = event.target;\n      console.warn(node);\n      if (!node.data('collapsed') && that.nodeService.getNodeConnected(node).length > 0) {\n        that.optionMenu.hideMenuItem('expand-node');\n        that.optionMenu.showMenuItem('collapse-node');\n      }\n      if (node.data('collapsed')) {\n\n        that.optionMenu.hideMenuItem('collapse-node');\n        that.optionMenu.showMenuItem('expand-node');\n      }\n      if (!node.data('collapsed') && that.nodeService.getNodeConnected(node).length === 0) {\n        that.optionMenu.hideMenuItem('expand-node');\n        that.optionMenu.hideMenuItem('collapse-node');\n      }\n      that.mutualService.refreshToolbarNode(node, that);\n    });\n\n    function checkedColor(control: FormControl) {\n      const color = control.value;\n      if (that.arrayColorUsed.includes(color)) {\n        return {\n          validateColor: {\n            valid: false\n          }\n        };\n      } else {\n        return null;\n      }\n\n    }\n    // initialisation\n    this.formNode = new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl('Nouveau node', [Validators.required, Validators.maxLength(40)]),\n      color: new FormControl(this.colorService.checkedColor(that.arrayColorUsed), [Validators.required, checkedColor])\n    });\n\n  }\n  get f() {\n    return this.formNode.controls;\n  }\n  openModal() {\n    this.modalRef = this.modalService.show(this.modalNode);\n  }\n  closeModal() {\n    this.modalRef.hide();\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.formNode.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    const nodeId = this.formNode.value.id;\n    const node = this.nodeService.getNodeById(nodeId, this);\n\n    if (!this.statusModal) {\n      this.mutualService.addChildNode(node, this.formNode.value.name, this.formNode.value.color, this);\n    } else {\n      this.nodeService.updateInformationNode(node, this);\n    }\n    this.submitted = false;\n    this.loading = false;\n    this.formNode.reset();\n    this.closeModal();\n    this.formNode.get('name').setValue('NOuveau node');\n\n\n\n  }\n\n  renderGraph() {\n\n    const layout = this.cy.layout({\n      name: 'cose',\n    });\n\n    layout.run();\n  }\n\n\n\n  emitChange() {\n    this.onChange.emit(this.cy.json());\n  }\n\n  // getTestNode() {\n  //   return this.nodeService.getTestNode(this);\n  // }\n  collapseNode(node) {\n    return this.toolbarService.collapseNode(node);\n\n  }\n  expandNode(node) {\n    return this.toolbarService.expandNode(node);\n\n  }\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MindmapComponent } from './mindmap.component';\nimport { ToolbarService } from './services/toolbar.service';\nimport { ColorService } from './services/color.service';\nimport { MutualService } from './services/mutual.service';\nimport { CollapseService } from './services/collapse.service';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { NodeService } from './services/node.service';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n\n@NgModule({\n  declarations: [MindmapComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ColorPickerModule,\n    ModalModule.forRoot()\n  ],\n  providers: [\n    ToolbarService,\n    ColorService,\n    MutualService,\n    CollapseService,\n    NodeService\n  ],\n  bootstrap: [MindmapComponent],\n  exports: [MindmapComponent]\n})\nexport class MindmapModule { }\n"]}